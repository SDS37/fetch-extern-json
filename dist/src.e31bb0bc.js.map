{"version":3,"sources":["constants/constants.js","index.js"],"names":["JSON_URL","parties","fetch","then","response","json","data","parliamentMembers","personlista","person","map","parliamentMember","party","parti","name","tilltalsnamn","efternamn","includes","push","sort","a","b","createList","createFilterOptions","filterOptions","document","querySelectorAll","option","addEventListener","selectedOption","filter","value","Boolean","filteredMembers","member","forEach","li","parentNode","removeChild","parliamentMembersList","node","createElement","appendChild","createTextNode","getElementById","setAttribute"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["const JSON_URL = 'http://data.riksdagen.se/personlista/?utformat=json';\n\nexport { JSON_URL }","import { JSON_URL } from './constants/constants';\n\nconst parties = [ 'all' ];\n\nfetch(JSON_URL).then(response => {\n    return response.json();\n  }).then( data => {\n    const parliamentMembers = data.personlista.person.map( person => {\n      const parliamentMember = {\n        party: person.parti,\n        name: `${person.tilltalsnamn} ${person.efternamn}`\n      }\n      if (!parties.includes(person.parti)) parties.push(person.parti);\n      return parliamentMember;\n    }).sort( (a, b) => {\n      if(a.party < b.party) { return -1; };\n      if(a.party > b.party) { return 1; };\n      return 0;\n    });\n\n  // creates default list - all\n  createList(parliamentMembers);\n  // creates filter options\n  createFilterOptions();\n  // gets select options\n  const filterOptions = [...document.querySelectorAll('.filter select')];\n  // Selected option event listener\n  for (const option of filterOptions) {\n    option.addEventListener('change', () => {\n      const selectedOption = filterOptions.map(filter => filter.value).filter(Boolean)[0];\n      const filteredMembers = selectedOption === 'all' ? parliamentMembers : parliamentMembers.filter( member => member.party === selectedOption);\n      // removes current list\n      document.querySelectorAll('li').forEach( li => li.parentNode.removeChild(li));\n      // creates filtered list\n      createList(filteredMembers)\n    });\n  }\n\n});\n\n// helpers\nconst createList = (parliamentMembersList) => {\n  parliamentMembersList.map( member => {\n    const node = document.createElement(\"li\");\n    node.appendChild(document.createTextNode(`${member.party} - ${member.name}`));\n    document.getElementById(\"parlamient-list\").appendChild(node);\n  })\n}\n\nconst createFilterOptions = () => {\n  parties.map( party => {\n    const node = document.createElement(\"option\");\n    node.appendChild(document.createTextNode(`${party}`))\n    node.setAttribute('value', party);\n    document.getElementById(\"parties\").appendChild(node);\n  })\n}"]}